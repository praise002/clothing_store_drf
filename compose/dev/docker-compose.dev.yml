version: '3.8'

services:
  db:
    image: postgres:17-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.dev.db
    

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data

  web:
    image: clothing-store-api-dev-web:${IMAGE_TAG}
    build:
      context: ../..
      dockerfile: compose/dev/Dockerfile
    restart: always
    volumes:
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    env_file:
      - .env.dev
      - .env.dev.db
    environment:
      - SERVICE_TYPE=web
    depends_on:
      - db
      - redis

  celery:
    image: celery:${IMAGE_TAG}
    build:
      context: ../..
      dockerfile: compose/dev/Dockerfile
    restart: always
    env_file:
      - .env.dev
      - .env.dev.db
    environment:
      # explicitly set it cos dev.py is using localhost
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SERVICE_TYPE=celery
    depends_on:
      - db
      - redis

  celery-beat:
    image: celery-beat:${IMAGE_TAG}
    build:
      context: ../..
      dockerfile: compose/dev/Dockerfile
    restart: always
    env_file:
      - .env.dev
      - .env.dev.db
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - SERVICE_TYPE=celery-beat
    depends_on:
      - db
      - redis

  flower:
    image: mher/flower:2.0.0
    restart: always
    ports:
      - "5555:5555"
    env_file:
      - .env.dev
    environment:
      - FLOWER_BASIC_AUTH=admin:${FLOWER_PASSWORD}
      - BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
  
volumes:
  postgres_data: 
  redis_data:
  static_volume: 